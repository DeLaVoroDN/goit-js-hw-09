{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-form.js"],"sourcesContent":["const storageKey = 'feedback-form-state';\nconst form = document.querySelector('.feedback-form');\n\n// функція для читання даних, введених в таблиці\nfunction readFormData() {\n  const email = form.email.value.trim();\n  const message = form.message.value.trim();\n  return {\n    email,\n    message,\n  };\n}\n\n// збереження даних в локальне сховище\nform.addEventListener('input', event => {\n  const data = readFormData();\n  event.preventDefault();\n  const jsonData = JSON.stringify(data);\n  localStorage.setItem(storageKey, jsonData);\n});\n\n// при наявності даних в локальному сховищі виведення даних одразу в форму\nconst rowData = localStorage.getItem(storageKey);\nif (rowData) {\n  const isData = JSON.parse(rowData);\n  if (isData.email) {\n    form.email.value = isData.email;\n  }\n  if (isData.message) {\n    form.message.value = isData.message;\n  }\n}\n\n// якщо всі поля заповнені: очищення сховища і форми при натисканні кнопки + виведення даних в консоль\n"],"names":["storageKey","form","readFormData","email","message","event","data","jsonData","rowData","isData"],"mappings":"wFAAA,MAAMA,EAAa,sBACbC,EAAO,SAAS,cAAc,gBAAgB,EAGpD,SAASC,GAAe,CACtB,MAAMC,EAAQF,EAAK,MAAM,MAAM,KAAI,EAC7BG,EAAUH,EAAK,QAAQ,MAAM,KAAI,EACvC,MAAO,CACL,MAAAE,EACA,QAAAC,CACJ,CACA,CAGAH,EAAK,iBAAiB,QAASI,GAAS,CACtC,MAAMC,EAAOJ,IACbG,EAAM,eAAc,EACpB,MAAME,EAAW,KAAK,UAAUD,CAAI,EACpC,aAAa,QAAQN,EAAYO,CAAQ,CAC3C,CAAC,EAGD,MAAMC,EAAU,aAAa,QAAQR,CAAU,EAC/C,GAAIQ,EAAS,CACX,MAAMC,EAAS,KAAK,MAAMD,CAAO,EAC7BC,EAAO,QACTR,EAAK,MAAM,MAAQQ,EAAO,OAExBA,EAAO,UACTR,EAAK,QAAQ,MAAQQ,EAAO,QAEhC"}